DebugCommands: {
	get_Command: {
		1: {
			// OldString: debugprojs
			// NewString: debugprojs
		}
	}

	get_Description: {
		1: {
			// OldString: Print internal names of active projectiles.
			// NewString: Print internal names of active projectiles.
		}
	}

	Action: {
		1: {
			// OldString: "ID: "
			// NewString: "ID: "
		}

		2: {
			// OldString: ", Name: "
			// NewString: ", Name: "
		}

		3: {
			// OldString: /
			// NewString: /
		}
	}
}

DebugProjSizeCommand: {
	get_Command: {
		1: {
			// OldString: debugprojsize
			// NewString: debugprojsize
		}
	}

	get_Description: {
		1: {
			// OldString: Print internal sprite sizes of active projectiles.
			// NewString: Print internal sprite sizes of active projectiles.
		}
	}

	Action: {
		1: {
			// OldString: "Proj ID: "
			// NewString: "Proj ID: "
		}

		2: {
			// OldString: "' Type: "
			// NewString: "' Type: "
		}

		3: {
			// OldString: "' Name: "
			// NewString: "' Name: "
		}

		4: {
			// OldString: "' Size: "
			// NewString: "' Size: "
		}

		5: {
			// OldString: x
			// NewString: x
		}
	}
}

DebugItemNameCommand: {
	get_Command: {
		1: {
			// OldString: debugitem
			// NewString: debugitem
		}
	}

	get_Description: {
		1: {
			// OldString: Prints the internal name of the currently held item.
			// NewString: Prints the internal name of the currently held item.
		}
	}

	Action: {
		1: {
			// OldString: You are not holding any item.
			// NewString: You are not holding any item.
		}

		2: {
			// OldString: ":"
			// NewString: ":"
		}

		3: {
			// OldString: Terraria:
			// NewString: Terraria:
		}

		4: {
			// OldString: "Internal item name: "
			// NewString: "Internal item name: "
		}
	}
}

BrokenOath: {
	get_Texture: {
		1: {
			// OldString: WHummusMultiModBalancing/Content/BrokenOath
			// NewString: WHummusMultiModBalancing/Content/BrokenOath
		}
	}
}

NullifyAlienBoardSystem: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	Load: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: StrangeAlienMotherBoard
			// NewString: StrangeAlienMotherBoard
		}
	}
}

NullifyAlienBoardGlobalNPC: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	ModifyNPCLoot: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: StarScouter
			// NewString: StarScouter
		}
	}
}

NullifyAlienBoardGlobalItem: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	ModifyItemLoot: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: StarScouterTreasureBag
			// NewString: StarScouterTreasureBag
		}
	}
}

NPCSellAdditions: {
	ModifyShop: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: LastingPliers
			// NewString: LastingPliers
		}

		3: {
			// OldString: EbonHammer
			// NewString: EbonHammer
		}

		4: {
			// OldString: Cobbler
			// NewString: Cobbler
		}

		5: {
			// OldString: Blacksmith
			// NewString: Blacksmith
		}
	}
}

CalamityStarterBagGlobal: {
	ModifyItemLoot: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		2: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		3: {
			// OldString: StarterBag
			// NewString: StarterBag
		}

		4: {
			// OldString: Tambourine
			// NewString: Tambourine
		}

		5: {
			// OldString: Pill
			// NewString: Pill
		}
	}
}

ThrowerRogueHealerPlayer: {
	EnsureInitialized: {
		1: {
			// OldString: ThoriumMod/ThrowingGuideVolume2
			// NewString: ThoriumMod/ThrowingGuideVolume2
		}

		2: {
			// OldString: ThoriumMod/ThrowingGuideVolume3
			// NewString: ThoriumMod/ThrowingGuideVolume3
		}

		3: {
			// OldString: FargowiltasCrossmod/VagabondsSoul
			// NewString: FargowiltasCrossmod/VagabondsSoul
		}

		4: {
			// OldString: FargowiltasSouls/UniverseSoul
			// NewString: FargowiltasSouls/UniverseSoul
		}

		5: {
			// OldString: FargowiltasSouls/EternitySoul
			// NewString: FargowiltasSouls/EternitySoul
		}
	}

	ApplyExhaustionDisabling: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: isThrowerNon
			// NewString: isThrowerNon
		}
	}

	RestoreExhaustion: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: isThrowerNon
			// NewString: isThrowerNon
		}
	}

	PostUpdateEquips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: WhiteDwarfMask
			// NewString: WhiteDwarfMask
		}

		3: {
			// OldString: WhiteDwarfGuard
			// NewString: WhiteDwarfGuard
		}

		4: {
			// OldString: WhiteDwarfGreaves
			// NewString: WhiteDwarfGreaves
		}

		5: {
			/* OldString:
				'''

				Ivory flares can proc on a 2 second cooldown
				''' */
			NewString:
				'''

				象牙状火焰触发后有2秒冷却时间
				'''
		}
	}
}

WhummusGlobalItem: {
	EnsureInitialized: {
		1: {
			// OldString: ThoriumMod/ThrowingGuideVolume2
			// NewString: ThoriumMod/ThrowingGuideVolume2
		}

		2: {
			// OldString: ThoriumMod/ThrowingGuideVolume3
			// NewString: ThoriumMod/ThrowingGuideVolume3
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: NoExhaustion
			// NewString: NoExhaustion
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.NoExhaustion
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.NoExhaustion
		}

		3: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		4: {
			// OldString: WhiteDwarfThrusters
			// NewString: WhiteDwarfThrusters
		}

		5: {
			// OldString: Allows for Ivory Flares to proc twice as fast while wearing the White Dwarf Armor
			NewString: 穿戴全套白矮星盔甲时，象牙状火焰的触发速度翻倍
		}

		6: {
			// OldString: MjolnirInfo
			// NewString: MjolnirInfo
		}
	}
}

ChampionWingChanges: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: ChampionWing
			// NewString: ChampionWing
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: ChampionWing
			// NewString: ChampionWing
		}

		3: {
			// OldString: 10% increased damage
			NewString: 提高10%的伤害
		}

		4: {
			// OldString: ""
			// NewString: ""
		}
	}
}

ChangeUseConditions: {
	IsLoadingEnabled: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: Renew
			// NewString: Renew
		}

		3: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		4: {
			// OldString: CatalystMod
			// NewString: CatalystMod
		}

		5: {
			// OldString: StarBirth
			// NewString: StarBirth
		}

		6: {
			// OldString: LostOasis
			// NewString: LostOasis
		}
	}
}

CooldownTooltips: {
	ModifyTooltips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: Renew
			// NewString: Renew
		}

		3: {
			// OldString: CooldownInfo
			// NewString: CooldownInfo
		}

		4: {
			// OldString: Can be used on a 2 second cooldown
			NewString: 可在2秒冷却后使用
		}

		5: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		6: {
			// OldString: StarBirth
			// NewString: StarBirth
		}

		7: {
			// OldString: LostOasis
			// NewString: LostOasis
		}

		8: {
			// OldString: Can be used on a 5 second cooldown
			NewString: 可在5秒冷却后使用
		}
	}
}

DebugBootSystem: {
	PostSetupContent: {
		1: {
			// OldString: DebugBootSystem is running!
			// NewString: DebugBootSystem is running!
		}
	}
}

ShinobiNerf: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}
}

WhiteDwarfCooldown: {
	OnHitNPC: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: WhiteDwarfThrusters
			// NewString: WhiteDwarfThrusters
		}
	}
}

WingTooltips: {
	ModifyTooltips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: SubspaceWings
			// NewString: SubspaceWings
		}

		3: {
			// OldString: TerrariumWings
			// NewString: TerrariumWings
		}

		4: {
			// OldString: WingInfo
			// NewString: WingInfo
		}

		5: {
			// OldString: Also increases life regen by 2
			NewString: 提高2点生命恢复速度
		}

		6: {
			// OldString: Also increases life regen by 4
			NewString: 提高4点生命恢复速度
		}
	}
}

CalCrossmodArmorRecipeChanges: {
	PostAddRecipes: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		3: {
			// OldString: NightfallenBreastplate
			// NewString: NightfallenBreastplate
		}

		4: {
			// OldString: NightfallenGreaves
			// NewString: NightfallenGreaves
		}

		5: {
			// OldString: NightfallenHelmet
			// NewString: NightfallenHelmet
		}

		6: {
			// OldString: AerospecBard
			// NewString: AerospecBard
		}

		7: {
			// OldString: AerospecHealer
			// NewString: AerospecHealer
		}

		8: {
			// OldString: AuricTeslaFrilledHelmet
			// NewString: AuricTeslaFrilledHelmet
		}

		9: {
			// OldString: AuricTeslaHealerHead
			// NewString: AuricTeslaHealerHead
		}

		10: {
			// OldString: BloodflareHeadBard
			// NewString: BloodflareHeadBard
		}

		11: {
			// OldString: BloodflareHeadHealer
			// NewString: BloodflareHeadHealer
		}

		12: {
			// OldString: DaedalusHeadBard
			// NewString: DaedalusHeadBard
		}

		13: {
			// OldString: DaedalusHeadHealer
			// NewString: DaedalusHeadHealer
		}

		14: {
			// OldString: GodSlayerHeadBard
			// NewString: GodSlayerHeadBard
		}

		15: {
			// OldString: SilvaHeadHealer
			// NewString: SilvaHeadHealer
		}

		16: {
			// OldString: StatigelHeadBard
			// NewString: StatigelHeadBard
		}

		17: {
			// OldString: StatigelHeadHealer
			// NewString: StatigelHeadHealer
		}

		18: {
			// OldString: TarragonCowl
			// NewString: TarragonCowl
		}

		19: {
			// OldString: TarragonShroud
			// NewString: TarragonShroud
		}

		20: {
			// OldString: VictideHeadBard
			// NewString: VictideHeadBard
		}

		21: {
			// OldString: AerospecHeadphones
			// NewString: AerospecHeadphones
		}

		22: {
			// OldString: AerospecBiretta
			// NewString: AerospecBiretta
		}

		23: {
			// OldString: AuricTeslaFeatheredHeadwear
			// NewString: AuricTeslaFeatheredHeadwear
		}

		24: {
			// OldString: AuricTeslaValkyrieVisage
			// NewString: AuricTeslaValkyrieVisage
		}

		25: {
			// OldString: BloodflareSirenSkull
			// NewString: BloodflareSirenSkull
		}

		26: {
			// OldString: BloodflareRitualistMask
			// NewString: BloodflareRitualistMask
		}

		27: {
			// OldString: DaedalusHat
			// NewString: DaedalusHat
		}

		28: {
			// OldString: DaedalusCowl
			// NewString: DaedalusCowl
		}

		29: {
			// OldString: GodSlayerDeathsingerCowl
			// NewString: GodSlayerDeathsingerCowl
		}

		30: {
			// OldString: SilvaGuardianHelmet
			// NewString: SilvaGuardianHelmet
		}

		31: {
			// OldString: StatigelEarrings
			// NewString: StatigelEarrings
		}

		32: {
			// OldString: StatigelFoxMask
			// NewString: StatigelFoxMask
		}

		33: {
			// OldString: TarragonParagonCrown
			// NewString: TarragonParagonCrown
		}

		34: {
			// OldString: TarragonChapeau
			// NewString: TarragonChapeau
		}

		35: {
			// OldString: VictideAmmoniteHat
			// NewString: VictideAmmoniteHat
		}
	}
}

ThoriumItemUtils: {
	GetReworkedReforge: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		2: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		3: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		4: {
			// OldString: SOTSBardHealer
			// NewString: SOTSBardHealer
		}

		5: {
			// OldString: SpookyBardHealer
			// NewString: SpookyBardHealer
		}

		6: {
			// OldString: Muted
			// NewString: Muted
		}

		7: {
			// OldString: OffKey
			// NewString: OffKey
		}

		8: {
			// OldString: Rambling
			// NewString: Rambling
		}

		9: {
			// OldString: Buzzing
			// NewString: Buzzing
		}

		10: {
			// OldString: Refined
			// NewString: Refined
		}

		11: {
			// OldString: Loud
			// NewString: Loud
		}

		12: {
			// OldString: Supersonic
			// NewString: Supersonic
		}

		13: {
			// OldString: Vibrant
			// NewString: Vibrant
		}

		14: {
			// OldString: Euphonic
			// NewString: Euphonic
		}

		15: {
			// OldString: Inspiring
			// NewString: Inspiring
		}

		16: {
			// OldString: Melodic
			// NewString: Melodic
		}

		17: {
			// OldString: Fabled
			// NewString: Fabled
		}
	}
}

SoulAnchorChange: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	CanUseItem: {
		1: {
			// OldString: RevivalExhaustion
			// NewString: RevivalExhaustion
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: SoulAnchor
			// NewString: SoulAnchor
		}

		3: {
			// OldString: Anchors your soul and health to your current position
			NewString: 将你的灵魂和生命值锚定在当前位置
		}

		4: {
			// OldString: "' for 20 seconds"
			NewString: "，持续20秒"
		}

		5: {
			// OldString: Right click to return to your soul, reverting health to its original value
			NewString: 右键回到你的灵魂处并将生命值回退到原先的值
		}

		6: {
			// OldString: Within that period, right click to return to your soul, reverting health to half its original value
			NewString: 在此期间，右键回到你的灵魂处并将生命值回退到原先的值的一半
		}

		7: {
			// OldString: Can only be used once every 5 minutes and saps your soul upon returning
			NewString: 每5分钟只能使用一次且在回来后会侵蚀你的灵魂
		}

		8: {
			/* OldString:
				'''
				Saps your soul upon returning and grants Potion Sickness
				Can only be used once every 5 minutes
				''' */
			NewString:
				'''
				回来后会侵蚀你的灵魂并获得耐药性
				每5分钟只能使用一次
				'''
		}
	}

	IsSoulAnchor: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: SoulAnchor
			// NewString: SoulAnchor
		}
	}
}

MiscEffectsLayer: {
	Draw: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: Textures/SoulAnchorLocation
			// NewString: Textures/SoulAnchorLocation
		}
	}
}

SoulAnchorPlayer: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	PostUpdate: {
		1: {
			// OldString: Your Soul Anchor has faded.
			NewString: 你的定魂锚已消失。
		}
	}

	SetAnchor: {
		1: {
			// OldString: Soul Anchor set. You have 20 seconds to return.
			NewString: 定魂锚已设置，你有20秒的时间返回。
		}
	}

	TryTeleport: {
		1: {
			// OldString: Mortality
			// NewString: Mortality
		}

		2: {
			// OldString: RevivalExhaustion
			// NewString: RevivalExhaustion
		}

		3: {
			// OldString: Your Soul Anchor has faded.
			NewString: 你的定魂锚已消失。
		}
	}
}

BountifulHarvestStinger: {
	get_Texture: {
		1: {
			// OldString: Terraria/Images/Projectile_
			// NewString: Terraria/Images/Projectile_
		}
	}
}

PlayerBrimstoneBarrage: {
	get_Texture: {
		1: {
			// OldString: CalamityMod/Projectiles/Boss/BrimstoneBarrage
			// NewString: CalamityMod/Projectiles/Boss/BrimstoneBarrage
		}
	}
}

PlayerBrimstoneFireblast: {
	get_Texture: {
		1: {
			// OldString: CalamityMod/Projectiles/Boss/SCalBrimstoneFireblast
			// NewString: CalamityMod/Projectiles/Boss/SCalBrimstoneFireblast
		}
	}

	PreDraw: {
		1: {
			// OldString: CalamityMod/Projectiles/Boss/SCalBrimstoneFireblast
			// NewString: CalamityMod/Projectiles/Boss/SCalBrimstoneFireblast
		}
	}

	Kill: {
		1: {
			// OldString: CalamityMod/Sounds/Custom/SCalSounds/BrimstoneFireblastImpact
			// NewString: CalamityMod/Sounds/Custom/SCalSounds/BrimstoneFireblastImpact
		}
	}
}

PlayerBrimstoneGigablast: {
	get_Texture: {
		1: {
			// OldString: CalamityMod/Projectiles/Boss/SCalBrimstoneGigablast
			// NewString: CalamityMod/Projectiles/Boss/SCalBrimstoneGigablast
		}
	}

	PreDraw: {
		1: {
			// OldString: CalamityMod/Projectiles/Boss/SCalBrimstoneGigablast
			// NewString: CalamityMod/Projectiles/Boss/SCalBrimstoneGigablast
		}
	}

	Kill: {
		1: {
			// OldString: CalamityMod/Sounds/Custom/SCalSounds/BrimstoneFireblastImpact
			// NewString: CalamityMod/Sounds/Custom/SCalSounds/BrimstoneFireblastImpact
		}
	}
}

RadioMicPro: {
	get_Texture: {
		1: {
			// OldString: Terraria/Images/Projectile_645
			// NewString: Terraria/Images/Projectile_645
		}
	}
}

RadioMicShadowBurst: {
	get_Texture: {
		1: {
			// OldString: Terraria/Images/Projectile_645
			// NewString: Terraria/Images/Projectile_645
		}
	}
}

ThoriumHeavyScytheSpark: {
	get_Texture: {
		1: {
			// OldString: ThoriumMod/Projectiles/ThoriumSpark
			// NewString: ThoriumMod/Projectiles/ThoriumSpark
		}
	}
}

TechniqueAdjustmentSystem: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	Load: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: ThoriumMod.ThrowerTechniqueTypeHelper
			// NewString: ThoriumMod.ThrowerTechniqueTypeHelper
		}

		3: {
			// OldString: ThoriumMod.ThrowerTechniqueType
			// NewString: ThoriumMod.ThrowerTechniqueType
		}

		4: {
			// OldString: GetCost
			// NewString: GetCost
		}
	}
}

ThoriumBossStatScaling: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	GetCalDifficulty: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		2: {
			// OldString: GetDifficultyActive
			// NewString: GetDifficultyActive
		}
	}

	IsInfernumActive: {
		1: {
			// OldString: InfernumMode
			// NewString: InfernumMode
		}

		2: {
			// OldString: GetInfernumActive
			// NewString: GetInfernumActive
		}
	}

	GetFargoDifficullty: {
		1: {
			// OldString: FargowiltasSouls
			// NewString: FargowiltasSouls
		}
	}

	IsWorldLegendary: {
		1: {
			// OldString: _currentGameModeInfo
			// NewString: _currentGameModeInfo
		}
	}

	AppliesToEntity: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	ApplyDifficultyAndPlayerScaling: {
		1: {
			// OldString: bossrush
			// NewString: bossrush
		}

		2: {
			// OldString: ""
			// NewString: ""
		}

		3: {
			// OldString: BoreanStrider
			// NewString: BoreanStrider
		}

		4: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}

		5: {
			// OldString: TheGrandThunderBird
			// NewString: TheGrandThunderBird
		}

		6: {
			// OldString: QueenJellyfish
			// NewString: QueenJellyfish
		}

		7: {
			// OldString: Viscount
			// NewString: Viscount
		}

		8: {
			// OldString: StarScouter
			// NewString: StarScouter
		}

		9: {
			// OldString: BuriedChampion
			// NewString: BuriedChampion
		}

		10: {
			// OldString: GraniteEnergyStorm
			// NewString: GraniteEnergyStorm
		}

		11: {
			// OldString: FallenBeholder
			// NewString: FallenBeholder
		}

		12: {
			// OldString: Lich
			// NewString: Lich
		}

		13: {
			// OldString: ForgottenOne
			// NewString: ForgottenOne
		}

		14: {
			// OldString: SlagFury
			// NewString: SlagFury
		}

		15: {
			// OldString: Aquaius
			// NewString: Aquaius
		}

		16: {
			// OldString: Omnicide
			// NewString: Omnicide
		}

		17: {
			// OldString: DreamEater
			// NewString: DreamEater
		}

		18: {
			// OldString: MasochistMode
			// NewString: MasochistMode
		}

		19: {
			// OldString: EternityMode
			// NewString: EternityMode
		}

		20: {
			// OldString: death
			// NewString: death
		}

		21: {
			// OldString: revengeance
			// NewString: revengeance
		}
	}

	ModifyHitPlayer: {
		1: {
			// OldString: ""
			// NewString: ""
		}

		2: {
			// OldString: SlagFury
			// NewString: SlagFury
		}

		3: {
			// OldString: Aquaius
			// NewString: Aquaius
		}

		4: {
			// OldString: Omnicide
			// NewString: Omnicide
		}

		5: {
			// OldString: DreamEater
			// NewString: DreamEater
		}

		6: {
			// OldString: MasochistMode
			// NewString: MasochistMode
		}

		7: {
			// OldString: EternityMode
			// NewString: EternityMode
		}

		8: {
			// OldString: death
			// NewString: death
		}

		9: {
			// OldString: revengeance
			// NewString: revengeance
		}
	}

	PostAI: {
		1: {
			// OldString: BoreanStrider
			// NewString: BoreanStrider
		}

		2: {
			// OldString: MasochistMode
			// NewString: MasochistMode
		}

		3: {
			// OldString: EternityMode
			// NewString: EternityMode
		}

		4: {
			// OldString: death
			// NewString: death
		}

		5: {
			// OldString: revengeance
			// NewString: revengeance
		}
	}
}

ThoriumBossEffects: {
	PostAI: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	*cctor: {
		1: {
			// OldString: TheGrandThunderBird
			// NewString: TheGrandThunderBird
		}

		2: {
			// OldString: QueenJellyfish
			// NewString: QueenJellyfish
		}

		3: {
			// OldString: Viscount
			// NewString: Viscount
		}

		4: {
			// OldString: GraniteEnergyStorm
			// NewString: GraniteEnergyStorm
		}

		5: {
			// OldString: BuriedChampion
			// NewString: BuriedChampion
		}

		6: {
			// OldString: StarScouter
			// NewString: StarScouter
		}

		7: {
			// OldString: BoreanStrider
			// NewString: BoreanStrider
		}

		8: {
			// OldString: FallenBeholder
			// NewString: FallenBeholder
		}

		9: {
			// OldString: Lich
			// NewString: Lich
		}

		10: {
			// OldString: LichHeadless
			// NewString: LichHeadless
		}

		11: {
			// OldString: ForgottenOne
			// NewString: ForgottenOne
		}

		12: {
			// OldString: ForgottenOneCracked
			// NewString: ForgottenOneCracked
		}

		13: {
			// OldString: ForgottenOneReleased
			// NewString: ForgottenOneReleased
		}

		14: {
			// OldString: DreamEater
			// NewString: DreamEater
		}

		15: {
			// OldString: Omnicide
			// NewString: Omnicide
		}

		16: {
			// OldString: SlagFury
			// NewString: SlagFury
		}

		17: {
			// OldString: Aquaius
			// NewString: Aquaius
		}

		18: {
			// OldString: PatchWerk
			// NewString: PatchWerk
		}

		19: {
			// OldString: CorpseBloom
			// NewString: CorpseBloom
		}

		20: {
			// OldString: Illusionist
			// NewString: Illusionist
		}
	}
}

ScalingWarningMessage: {
	OnEnterWorld: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: NOTICE: Make sure the Health, Damage, & Speed multipliers are set to 1 (default) in the compatibility config of Thorium Bosses Reworked (unless you want a harder experience), as this mod automatically adjusts the Thorium bosses depending on the current difficulty.
			NewString: 注意：检测到已启用 Thorium Bosses Reworked，请在兼容性配置中将生命、伤害与速度倍率均设为 1（除非你想要更高难度），该模组会根据当前难度自动调整瑟银 Boss 属性。
		}

		3: {
			// OldString: NOTICE: For the Balancing of weapons to be as intended, set the Ragnarok mod config of 'Generic Weapon Tweaks' to OFF, as otherwise the changes will stack and weapons will be far stronger than intended.
			NewString: 注意：为确保武器平衡按预期生效，请在 Ragnarok 的模组配置中将“Generic Weapon Tweaks”选项关闭，否则改动会叠加，使武器强度远超预期。
		}
	}
}

WHummusMultiModBalancing: {
	PostSetupContent: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	HandlePacket: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}
}

MjolnirGlobalItem: {
	UpdateInventory: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: Mjolnir
			// NewString: Mjolnir
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: Mjolnir
			// NewString: Mjolnir
		}

		3: {
			// OldString: Has reduced damage if any summons are active
			NewString: 如果存在任意召唤物将会降低伤害
		}

		4: {
			// OldString: Damage reduced while summons are active
			NewString: 召唤物存在时降低伤害
		}

		5: {
			// OldString: MjolnirInfo
			// NewString: MjolnirInfo
		}
	}
}

OneirophobiaGlobalItem: {
	UpdateInventory: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}

		2: {
			// OldString: Oneirophobia
			// NewString: Oneirophobia
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}

		2: {
			// OldString: Oneirophobia
			// NewString: Oneirophobia
		}

		3: {
			// OldString: Has reduced damage if any summons are active
			NewString: 如果存在任意召唤物将会降低伤害
		}

		4: {
			// OldString: Damage reduced while summons are active
			NewString: 召唤物存在时降低伤害
		}

		5: {
			// OldString: OneirophobiaInfo1
			// NewString: OneirophobiaInfo1
		}

		6: {
			// OldString: Hold right click to summon the Ludic Instrument to fight for you
			NewString: 按住右键召唤残梦乐器为你而战
		}

		7: {
			// OldString: OneirophobiaInfo2
			// NewString: OneirophobiaInfo2
		}
	}
}

OneirophobiaRightClickControl: {
	PostUpdate: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}

		2: {
			// OldString: Oneirophobia
			// NewString: Oneirophobia
		}

		3: {
			// OldString: OneirophobiaMinion
			// NewString: OneirophobiaMinion
		}

		4: {
			// OldString: RightClickSpawn
			// NewString: RightClickSpawn
		}
	}
}

OneirophobiaSuppressor: {
	UpdateInventory: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}

		2: {
			// OldString: Oneirophobia
			// NewString: Oneirophobia
		}

		3: {
			// OldString: ThoriumRework.ThoriumPlayer
			// NewString: ThoriumRework.ThoriumPlayer
		}

		4: {
			// OldString: Failed to get ThoriumPlayer type
			// NewString: Failed to get ThoriumPlayer type
		}

		5: {
			// OldString: modPlayers
			// NewString: modPlayers
		}

		6: {
			// OldString: Failed to get modPlayers field
			// NewString: Failed to get modPlayers field
		}

		7: {
			// OldString: Failed to get modPlayers list
			// NewString: Failed to get modPlayers list
		}

		8: {
			// OldString: Failed to locate ThoriumPlayer instance in modPlayers
			// NewString: Failed to locate ThoriumPlayer instance in modPlayers
		}

		9: {
			// OldString: oneirophobic
			// NewString: oneirophobic
		}
	}
}

SyctheoftheAbandonedGodChange: {
	ModifyTooltips: {
		1: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ScytheScale
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ScytheScale
		}

		2: {
			// OldString: ScytheoftheAbandonedGodDamageInfo
			// NewString: ScytheoftheAbandonedGodDamageInfo
		}

		3: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ScytheSummon
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ScytheSummon
		}

		4: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ScytheSummonOn
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ScytheSummonOn
		}

		5: {
			// OldString: ScytheoftheAbandonedGodInfo
			// NewString: ScytheoftheAbandonedGodInfo
		}
	}

	TryGetScytheModItem: {
		1: {
			// OldString: CatalystMod
			// NewString: CatalystMod
		}

		2: {
			// OldString: ScytheoftheAbandonedGod
			// NewString: ScytheoftheAbandonedGod
		}
	}
}

HealingChanges: {
	SetHealAmount: {
		1: {
			// OldString: healAmount
			// NewString: healAmount
		}

		2: {
			// OldString: "Could not find 'healAmount' field on "
			// NewString: "Could not find 'healAmount' field on "
		}

		3: {
			// OldString: .
			// NewString: .
		}
	}

	*cctor: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		2: {
			// OldString: PurgatoriumPandemonium
			// NewString: PurgatoriumPandemonium
		}

		3: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		4: {
			// OldString: CelestialWand
			// NewString: CelestialWand
		}

		5: {
			// OldString: Gauze
			// NewString: Gauze
		}

		6: {
			// OldString: RecoveryWand
			// NewString: RecoveryWand
		}

		7: {
			// OldString: TheGoodBook
			// NewString: TheGoodBook
		}

		8: {
			// OldString: TheGigaNeedle
			// NewString: TheGigaNeedle
		}

		9: {
			// OldString: LargePopcorn
			// NewString: LargePopcorn
		}

		10: {
			// OldString: BrainCoral
			// NewString: BrainCoral
		}

		11: {
			// OldString: EaterOfPain
			// NewString: EaterOfPain
		}

		12: {
			// OldString: ChiLantern
			// NewString: ChiLantern
		}
	}
}

EtherealTalismanAccessoryChanges: {
	get_calamity: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: MurkyCatalyst
			// NewString: MurkyCatalyst
		}

		2: {
			// OldString: HungeringBlossom
			// NewString: HungeringBlossom
		}

		3: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		4: {
			// OldString: SigilofCalamitas
			// NewString: SigilofCalamitas
		}

		5: {
			// OldString: EtherealTalisman
			// NewString: EtherealTalisman
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Murky
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Murky
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Hungering
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Hungering
		}

		3: {
			// OldString: SigilofCalamitas
			// NewString: SigilofCalamitas
		}

		4: {
			// OldString: MurkyInfo
			// NewString: MurkyInfo
		}

		5: {
			// OldString: EtherealTalisman
			// NewString: EtherealTalisman
		}

		6: {
			// OldString: HungeringInfo
			// NewString: HungeringInfo
		}
	}
}

EtherealTalismanRecipeChanges: {
	get_calamity: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	AddRecipes: {
		1: {
			// OldString: AnyManaFlowerAccessory
			// NewString: AnyManaFlowerAccessory
		}

		2: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}

		3: {
			// OldString: HungeringBlossom
			// NewString: HungeringBlossom
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: MurkyCatalyst
			// NewString: MurkyCatalyst
		}
	}
}

GauntletRecipeChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}
	}
}

HealerAccessoryChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_Ragnarok: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}
	}

	get_CalBardHealer: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}
	}

	get_SOTSBardHealer: {
		1: {
			// OldString: SOTSBardHealer
			// NewString: SOTSBardHealer
		}
	}

	get_ThoriumRework: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: ElementalBloom
			// NewString: ElementalBloom
		}

		2: {
			// OldString: SoulGuard
			// NewString: SoulGuard
		}

		3: {
			// OldString: SealedContract
			// NewString: SealedContract
		}

		4: {
			// OldString: BonusHealerHealBonus
			// NewString: BonusHealerHealBonus
		}

		5: {
			// OldString: SerpentsTongue
			// NewString: SerpentsTongue
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ElementalBloom
			// NewString: ElementalBloom
		}

		2: {
			// OldString: MergedTreeTooltip
			// NewString: MergedTreeTooltip
		}

		3: {
			// OldString: Mods.ThoriumMod.Items.SoulGuard.Tooltip
			// NewString: Mods.ThoriumMod.Items.SoulGuard.Tooltip
		}

		4: {
			// OldString: SealedContract
			// NewString: SealedContract
		}

		5: {
			// OldString: Maximum life increased by 60
			NewString: 最大生命增加60
		}

		6: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SerpentsTongue
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SerpentsTongue
		}

		7: {
			// OldString: Healing spells grant an additional 5 life
			NewString: 治疗法术会额外治疗5点生命值
		}

		8: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ContractNerf
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ContractNerf
		}
	}
}

HealerRecipeChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_Ragnarok: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}
	}

	get_CalBardHealer: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}
	}

	get_SOTSBardHealer: {
		1: {
			// OldString: SOTSBardHealer
			// NewString: SOTSBardHealer
		}
	}

	get_ThoriumRework: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: BloomingSaintessStatue
			// NewString: BloomingSaintessStatue
		}

		2: {
			// OldString: ElementalBloom
			// NewString: ElementalBloom
		}

		3: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}

		4: {
			// OldString: SoulGuard
			// NewString: SoulGuard
		}

		5: {
			// OldString: ExecutionersContract
			// NewString: ExecutionersContract
		}

		6: {
			// OldString: CelestialFragment
			// NewString: CelestialFragment
		}

		7: {
			// OldString: SealedContract
			// NewString: SealedContract
		}

		8: {
			// OldString: LifeGem
			// NewString: LifeGem
		}

		9: {
			// OldString: SerpentsTongue
			// NewString: SerpentsTongue
		}

		10: {
			// OldString: InfernoEssence
			// NewString: InfernoEssence
		}
	}
}

TunnerRecipeChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_Ragnarok: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}
	}

	get_CalBardHealer: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}
	}

	get_SOTSBardHealer: {
		1: {
			// OldString: SOTSBardHealer
			// NewString: SOTSBardHealer
		}
	}

	get_ThoriumRework: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: FanDonations
			// NewString: FanDonations
		}

		2: {
			// OldString: BloomWeave
			// NewString: BloomWeave
		}

		3: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}

		4: {
			// OldString: HypersonicTuner
			// NewString: HypersonicTuner
		}

		5: {
			// OldString: SubsonicTuner
			// NewString: SubsonicTuner
		}

		6: {
			// OldString: InfrasonicTuner
			// NewString: InfrasonicTuner
		}

		7: {
			// OldString: ShootingStarFragment
			// NewString: ShootingStarFragment
		}

		8: {
			// OldString: ssm
			// NewString: ssm
		}

		9: {
			// OldString: BardSoul
			// NewString: BardSoul
		}

		10: {
			// OldString: TesseractTuner
			// NewString: TesseractTuner
		}
	}
}

RogueAccessoryChanges: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_SSM: {
		1: {
			// OldString: ssm
			// NewString: ssm
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_calamity: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	get_clamity: {
		1: {
			// OldString: Clamity
			// NewString: Clamity
		}
	}

	get_fargo: {
		1: {
			// OldString: FargowiltasSouls
			// NewString: FargowiltasSouls
		}
	}

	get_fargocross: {
		1: {
			// OldString: FargowiltasCrossmod
			// NewString: FargowiltasCrossmod
		}
	}

	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: ShinobiSigil
			// NewString: ShinobiSigil
		}

		2: {
			// OldString: DraculasCharm
			// NewString: DraculasCharm
		}

		3: {
			// OldString: ScuttlersJewel
			// NewString: ScuttlersJewel
		}

		4: {
			// OldString: BoneGrip
			// NewString: BoneGrip
		}

		5: {
			// OldString: MagnetoGrip
			// NewString: MagnetoGrip
		}

		6: {
			// OldString: UniverseSoul
			// NewString: UniverseSoul
		}

		7: {
			// OldString: EternitySoul
			// NewString: EternitySoul
		}

		8: {
			// OldString: VagabondsSoul
			// NewString: VagabondsSoul
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Scuttler
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Scuttler
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Bone
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Bone
		}

		3: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.BloodyFilthy
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.BloodyFilthy
		}

		4: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Magneto
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Magneto
		}

		5: {
			/* OldString:
				'''
				6% increased throwing critical strike chance
				Dealing two consecutive throwing critical strikes will discharge dark lightning and increase throwing speed briefly
				This effect has a cooldown of 2 seconds.
				''' */
			NewString:
				'''
				增加6%投掷暴击率
				连续造成两次投掷暴击会产生暗影闪电并短暂增加投掷速度
				这个效果有2秒冷却时间
				'''
		}

		6: {
			// OldString: ShinobiSigil
			// NewString: ShinobiSigil
		}

		7: {
			// OldString: ShinobiCooldown
			// NewString: ShinobiCooldown
		}

		8: {
			// OldString: This effect has a cooldowwn of 2 seconds
			NewString: 这个效果有2秒冷却时间
		}

		9: {
			// OldString: shinobiInfo
			// NewString: shinobiInfo
		}

		10: {
			// OldString: DraculasCharm
			// NewString: DraculasCharm
		}

		11: {
			// OldString: BoneGrip
			// NewString: BoneGrip
		}

		12: {
			// OldString: scuttlerInfo
			// NewString: scuttlerInfo
		}

		13: {
			// OldString: boneInfo
			// NewString: boneInfo
		}

		14: {
			// OldString: MagnetoGrip
			// NewString: MagnetoGrip
		}

		15: {
			// OldString: bloodyfilthyInfo
			// NewString: bloodyfilthyInfo
		}

		16: {
			// OldString: magnetoInfo
			// NewString: magnetoInfo
		}
	}
}

RogueRecipeChanges: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_clamity: {
		1: {
			// OldString: Clamity
			// NewString: Clamity
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: ThrowingGuideVolume2
			// NewString: ThrowingGuideVolume2
		}

		2: {
			// OldString: ThrowingGuideVolume3
			// NewString: ThrowingGuideVolume3
		}

		3: {
			// OldString: WhiteDwarfFragment
			// NewString: WhiteDwarfFragment
		}

		4: {
			// OldString: CursedCloth
			// NewString: CursedCloth
		}

		5: {
			// OldString: Consolaria
			// NewString: Consolaria
		}

		6: {
			// OldString: SoulofBlight
			// NewString: SoulofBlight
		}

		7: {
			// OldString: ShinobiSigil
			// NewString: ShinobiSigil
		}

		8: {
			// OldString: DraculasCharm
			// NewString: DraculasCharm
		}

		9: {
			// OldString: AquaiteBar
			// NewString: AquaiteBar
		}

		10: {
			// OldString: BoneGrip
			// NewString: BoneGrip
		}

		11: {
			// OldString: UnholyShards
			// NewString: UnholyShards
		}

		12: {
			// OldString: MagnetoGrip
			// NewString: MagnetoGrip
		}

		13: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}
	}

	AddRecipes: {
		1: {
			// OldString: MagnetoGrip
			// NewString: MagnetoGrip
		}

		2: {
			// OldString: AbsoluteBar
			// NewString: AbsoluteBar
		}

		3: {
			// OldString: TwilightShard
			// NewString: TwilightShard
		}
	}
}

SummonerAccessoryChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_clamity: {
		1: {
			// OldString: Clamity
			// NewString: Clamity
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: ScryingGlass
			// NewString: ScryingGlass
		}

		2: {
			// OldString: NecroticSkull
			// NewString: NecroticSkull
		}

		3: {
			// OldString: CrystalScorpion
			// NewString: CrystalScorpion
		}

		4: {
			// OldString: FortressGenerator
			// NewString: FortressGenerator
		}

		5: {
			// OldString: SteamkeeperWatch
			// NewString: SteamkeeperWatch
		}

		6: {
			// OldString: YumasPendant
			// NewString: YumasPendant
		}

		7: {
			// OldString: SOTS
			// NewString: SOTS
		}

		8: {
			// OldString: PlatformGenerator
			// NewString: PlatformGenerator
		}

		9: {
			// OldString: CyanPearl
			// NewString: CyanPearl
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Skull
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Skull
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.CrystalScorpian
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.CrystalScorpian
		}

		3: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.FortressNoThor
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.FortressNoThor
		}

		4: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Fortress
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Fortress
		}

		5: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Watch
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Watch
		}

		6: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.TwoSentry
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.TwoSentry
		}

		7: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ThreeSentry
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ThreeSentry
		}

		8: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.CyanPearl
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.CyanPearl
		}

		9: {
			// OldString: FortressGenerator
			// NewString: FortressGenerator
		}

		10: {
			// OldString: Increases damage by 10% and life regeneration by 2
			NewString: 增加10%伤害和2点生命恢复速度
		}

		11: {
			// OldString: Increases summon damage by 10%
			NewString: 增加10%召唤伤害
		}

		12: {
			// OldString: Absorbs 25% of damage done to players on your team when above 25% life and grants immunity to knockback
			NewString: 当生命值超过25%时，会吸收队伍中玩家25%的所受伤害，并对击退免疫
		}

		13: {
			// OldString: pearl
			// NewString: pearl
		}

		14: {
			// OldString: scorpion
			// NewString: scorpion
		}

		15: {
			// OldString: watch
			// NewString: watch
		}

		16: {
			// OldString: sentries
			// NewString: sentries
		}

		17: {
			// OldString: skull
			// NewString: skull
		}

		18: {
			// OldString: fortress
			// NewString: fortress
		}
	}
}

SummonerRecipeChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_clamity: {
		1: {
			// OldString: Clamity
			// NewString: Clamity
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}

		2: {
			// OldString: SteamkeeperWatch
			// NewString: SteamkeeperWatch
		}

		3: {
			// OldString: FortressGenerator
			// NewString: FortressGenerator
		}

		4: {
			// OldString: CyanPearl
			// NewString: CyanPearl
		}

		5: {
			// OldString: NecroticSkull
			// NewString: NecroticSkull
		}

		6: {
			// OldString: CrystalScorpion
			// NewString: CrystalScorpion
		}
	}
}

OmniSpeakerAccessoryChanges: {
	get_Ragnarok: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}
	}

	get_CalBardHealer: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: SigilOfACruelWorld
			// NewString: SigilOfACruelWorld
		}

		3: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		4: {
			// OldString: UniversalHeadset
			// NewString: UniversalHeadset
		}

		5: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		6: {
			// OldString: OmniSpeaker
			// NewString: OmniSpeaker
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: SigilOfACruelWorld
			// NewString: SigilOfACruelWorld
		}

		2: {
			// OldString: Increases symphonic damage by 15%
			NewString: 增加15%音波伤害
		}

		3: {
			// OldString: Increases symphonic damage by 12%
			NewString: 增加12%音波伤害
		}

		4: {
			// OldString: UniversalHeadset
			// NewString: UniversalHeadset
		}

		5: {
			// OldString: Increases symphonic damage by 20%
			NewString: 增加20%音波伤害
		}

		6: {
			// OldString: Increases symphonic damage by 14%
			NewString: 增加14%音波伤害
		}

		7: {
			// OldString: Increases symphonic critical strike chance by 7%
			NewString: 增加7%音波暴击率
		}

		8: {
			// OldString: Increases symphonic critical strike chance by 5%
			NewString: 增加5%音波暴击率
		}

		9: {
			// OldString: Increases symphonic playing speed by 10%
			NewString: 增加10%音波演奏速度
		}

		10: {
			// OldString: Increases symphonic playing speed by 8%
			NewString: 增加8%音波演奏速度
		}

		11: {
			// OldString: Increases inspiration regeneration rate by 10%
			NewString: 增加10%灵感值恢复速度
		}

		12: {
			// OldString: Increases inspiration regeneration rate by 8%
			NewString: 增加8%灵感值恢复速度
		}

		13: {
			// OldString: OmniSpeaker
			// NewString: OmniSpeaker
		}

		14: {
			// OldString: 15% increased symphonic damage, playing speed, and critical strike chance
			NewString: 增加15%的音波伤害,演奏速度,和音波暴击率
		}

		15: {
			/* OldString:
				'''
				15% increased symphonic damage
				8% increased playing speed, critical strike chance, and inspiration regeneration rate
				''' */
			NewString:
				'''
				增加15%音波伤害
				增加8%的音波演奏速度,音波暴击率,和灵感值恢复速度
				'''
		}

		16: {
			// OldString: MaxInsp
			// NewString: MaxInsp
		}

		17: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.OmniIns
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.OmniIns
		}

		18: {
			// OldString: HeadsetInfo
			// NewString: HeadsetInfo
		}

		19: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.OmniEmp
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.OmniEmp
		}
	}
}

OmniSpeakerRecipeChanges: {
	get_Ragnarok: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}
	}

	get_CalBardHealer: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: UniversalHeadset
			// NewString: UniversalHeadset
		}

		3: {
			// OldString: OmniSpeaker
			// NewString: OmniSpeaker
		}
	}
}

QuiverAccessoryChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_calamity: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: BagOfAmmoGathering
			// NewString: BagOfAmmoGathering
		}

		2: {
			// OldString: InfinityPouch
			// NewString: InfinityPouch
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: Grants a 20% chance to not consume arrows
			NewString: 20%几率不消耗箭矢
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.BagOfAmmoConsume
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.BagOfAmmoConsume
		}

		3: {
			// OldString: MergedTreeTooltip
			// NewString: MergedTreeTooltip
		}

		4: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.BagOfAmmoOther
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.BagOfAmmoOther
		}

		5: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.InfintyBag
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.InfintyBag
		}
	}
}

QuiverRecipeChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_clamity: {
		1: {
			// OldString: Clamity
			// NewString: Clamity
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: BlazingQuiver
			// NewString: BlazingQuiver
		}

		2: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}

		3: {
			// OldString: BagOfAmmoGathering
			// NewString: BagOfAmmoGathering
		}

		4: {
			// OldString: InfinityPouch
			// NewString: InfinityPouch
		}
	}

	AddRecipes: {
		1: {
			// OldString: BlazingQuiver
			// NewString: BlazingQuiver
		}

		2: {
			// OldString: BagOfAmmoGathering
			// NewString: BagOfAmmoGathering
		}

		3: {
			// OldString: InfinityPouch
			// NewString: InfinityPouch
		}

		4: {
			// OldString: TerrariumCore
			// NewString: TerrariumCore
		}
	}
}

SharkToothAccessoryChanges: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}

		2: {
			// OldString: PrismarineNecklace
			// NewString: PrismarineNecklace
		}

		3: {
			// OldString: MidnightPrism
			// NewString: MidnightPrism
		}

		4: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		5: {
			// OldString: DragonTalonNecklace
			// NewString: DragonTalonNecklace
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Prisma
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Prisma
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Prisma2
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Prisma2
		}

		3: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Prisma3
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Prisma3
		}

		4: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Midnight1
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Midnight1
		}

		5: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Midnight2
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Midnight2
		}

		6: {
			// OldString: PrismarineNecklace
			// NewString: PrismarineNecklace
		}

		7: {
			// OldString: Increases armor penetration by 8 and max life by 20
			NewString: 增加8点护甲穿透和20点最大生命值
		}

		8: {
			// OldString: Increases armor penetration by 5 and max life by 20
			NewString: 增加5点护甲穿透和20点最大生命值
		}

		9: {
			// OldString: Increases armor penetration by 10
			NewString: 增加10点护甲穿透
		}

		10: {
			// OldString: Increases armor penetration by 12
			NewString: 增加12点护甲穿透
		}

		11: {
			// OldString: Increases armor penetration by 12, critical strike chance by 5%, and max life by 40
			NewString: 增加12点护甲穿透，5%暴击率和40点最大生命值
		}

		12: {
			// OldString: prisma1
			// NewString: prisma1
		}

		13: {
			// OldString: prisma2
			// NewString: prisma2
		}

		14: {
			// OldString: midnight1
			// NewString: midnight1
		}

		15: {
			// OldString: midnight2
			// NewString: midnight2
		}

		16: {
			// OldString: prisma3
			// NewString: prisma3
		}

		17: {
			// OldString: Increases armor penetration by 15
			NewString: 增加15点护甲穿透
		}

		18: {
			// OldString: Increases armor penetration by 15, critical strike chance by 5%, and max life by 40
			NewString: 增加15点护甲穿透，5%暴击率和40点最大生命值
		}

		19: {
			// OldString: DragonTalonNecklace
			// NewString: DragonTalonNecklace
		}

		20: {
			// OldString: Increases armor penetration by 8
			NewString: 增加8点护甲穿透
		}
	}
}

SharkToothRecipeChanges: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: OceanEssence
			// NewString: OceanEssence
		}

		2: {
			// OldString: MidnightPrism
			// NewString: MidnightPrism
		}

		3: {
			// OldString: PrismarineNecklace
			// NewString: PrismarineNecklace
		}

		4: {
			// OldString: DragonTalonNecklace
			// NewString: DragonTalonNecklace
		}

		5: {
			// OldString: WitchHeart
			// NewString: WitchHeart
		}

		6: {
			// OldString: Consolaria
			// NewString: Consolaria
		}

		7: {
			// OldString: SoulofBlight
			// NewString: SoulofBlight
		}
	}
}

MoreOmniShields: {
	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_clamity: {
		1: {
			// OldString: Clamity
			// NewString: Clamity
		}
	}

	get_souls: {
		1: {
			// OldString: FargowiltasSouls
			// NewString: FargowiltasSouls
		}
	}

	IsBarrier: {
		1: {
			// OldString: SupremeBarrier
			// NewString: SupremeBarrier
		}

		2: {
			// OldString: BulwarkOfTheAncients
			// NewString: BulwarkOfTheAncients
		}

		3: {
			// OldString: ColossusSoul
			// NewString: ColossusSoul
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: ColossusSoul
			// NewString: ColossusSoul
		}

		3: {
			// OldString: AccessoryWarning
			// NewString: AccessoryWarning
		}

		4: {
			// OldString: -Omni Shield-
			NewString: -至高神盾-
		}

		5: {
			// OldString: SupremeBarrier
			// NewString: SupremeBarrier
		}

		6: {
			// OldString: BulwarkOfTheAncients
			// NewString: BulwarkOfTheAncients
		}
	}
}

ShieldCraftingTree: {
	get_calamity: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_clamity: {
		1: {
			// OldString: Clamity
			// NewString: Clamity
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		3: {
			// OldString: OrnateShield
			// NewString: OrnateShield
		}

		4: {
			// OldString: ShatterHeartShield
			// NewString: ShatterHeartShield
		}

		5: {
			// OldString: AsgardsValor
			// NewString: AsgardsValor
		}

		6: {
			// OldString: PlasmaGenerator
			// NewString: PlasmaGenerator
		}

		7: {
			// OldString: ObsidianScale
			// NewString: ObsidianScale
		}

		8: {
			// OldString: AsgardianAegis
			// NewString: AsgardianAegis
		}

		9: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		10: {
			// OldString: TerrariumDefender
			// NewString: TerrariumDefender
		}

		11: {
			// OldString: OlympianAegis
			// NewString: OlympianAegis
		}

		12: {
			// OldString: ChiseledBarrier
			// NewString: ChiseledBarrier
		}

		13: {
			// OldString: LifeQuartzShield
			// NewString: LifeQuartzShield
		}

		14: {
			// OldString: TerrariumDefenderBuff
			// NewString: TerrariumDefenderBuff
		}

		15: {
			// OldString: DeificAmulet
			// NewString: DeificAmulet
		}

		16: {
			// OldString: SweetVengeance
			// NewString: SweetVengeance
		}

		17: {
			// OldString: MantleoftheProtector
			// NewString: MantleoftheProtector
		}

		18: {
			// OldString: CapeoftheSurvivor
			// NewString: CapeoftheSurvivor
		}

		19: {
			// OldString: RampartofDeities
			// NewString: RampartofDeities
		}

		20: {
			// OldString: Clamity
			// NewString: Clamity
		}

		21: {
			// OldString: SupremeBarrier
			// NewString: SupremeBarrier
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.MoltenScale
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.MoltenScale
		}

		3: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ChiseledBarrier
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ChiseledBarrier
		}

		4: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ChiseledHidden
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.ChiseledHidden
		}

		5: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Olympian
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Olympian
		}

		6: {
			// OldString: Increases the rate at which you regenerate life
			NewString: 增加你的生命再生速率
		}

		7: {
			/* OldString:
				'''
				Receiving damage below 25% life surrounds you in a protective bubble
				While in the bubble, you will recover life equal to your bonus healing every second
				''' */
			NewString:
				'''
				低于25%生命值时受到伤害会在你周围环绕一个保护性泡泡
				在泡泡中时，你每秒会恢复与治疗加成相同的生命值
				'''
		}

		8: {
			/* OldString:
				'''
				Additionally, damage taken will be reduced by 10%
				This effect needs to recharge for 30 seconds after triggering
				''' */
			NewString:
				'''
				另外，受到的伤害会降低10%
				此效果触发后需要30秒重新充能
				'''
		}

		9: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Mantle
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Mantle
		}

		10: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.COTS
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.COTS
		}

		11: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Sweet1
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Sweet1
		}

		12: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SweetAlt
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SweetAlt
		}

		13: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Sweet2
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Sweet2
		}

		14: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.TerraDefend
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.TerraDefend
		}

		15: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.DA
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.DA
		}

		16: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SHS
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SHS
		}

		17: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.PlasmaGen
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.PlasmaGen
		}

		18: {
			// OldString: shsInfo
			// NewString: shsInfo
		}

		19: {
			// OldString: PlasmaGenerator
			// NewString: PlasmaGenerator
		}

		20: {
			// OldString: MoltenScaleInfo
			// NewString: MoltenScaleInfo
		}

		21: {
			// OldString: pgInfo
			// NewString: pgInfo
		}

		22: {
			// OldString: sI1
			// NewString: sI1
		}

		23: {
			// OldString: sAI
			// NewString: sAI
		}

		24: {
			// OldString: MantleoftheProtector
			// NewString: MantleoftheProtector
		}

		25: {
			// OldString: costI1
			// NewString: costI1
		}

		26: {
			// OldString: sI2
			// NewString: sI2
		}

		27: {
			// OldString: daI
			// NewString: daI
		}

		28: {
			// OldString: TerrariumDefender
			// NewString: TerrariumDefender
		}

		29: {
			// OldString: Maximum life increased by 20
			NewString: 最大生命值增加20
		}

		30: {
			// OldString: Prolonges after hit invincibility
			NewString: 延长受伤后的无敌帧时间
		}

		31: {
			// OldString: Grants immunity to most status debuffs, knockback, and fire blocks
			NewString: 免疫大部分状态减益，击退和火块
		}

		32: {
			// OldString: SupremeBarrier
			// NewString: SupremeBarrier
		}

		33: {
			// OldString: tdInfo
			// NewString: tdInfo
		}

		34: {
			// OldString: motpInfo
			// NewString: motpInfo
		}

		35: {
			// OldString: cbI1
			// NewString: cbI1
		}

		36: {
			// OldString: oaI
			// NewString: oaI
		}

		37: {
			// OldString: cbhI
			// NewString: cbhI
		}

		38: {
			// OldString: lqI1
			// NewString: lqI1
		}

		39: {
			// OldString: lqI2
			// NewString: lqI2
		}

		40: {
			// OldString: lqI3
			// NewString: lqI3
		}
	}
}

ShieldRecipeChanges: {
	get_calamity: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: Clamity
			// NewString: Clamity
		}

		3: {
			// OldString: FargowiltasCrossmod
			// NewString: FargowiltasCrossmod
		}

		4: {
			// OldString: ssm
			// NewString: ssm
		}

		5: {
			// OldString: SupremeBarrier
			// NewString: SupremeBarrier
		}

		6: {
			// OldString: ShatterHeartShield
			// NewString: ShatterHeartShield
		}

		7: {
			// OldString: BulwarkOfTheAncients
			// NewString: BulwarkOfTheAncients
		}

		8: {
			// OldString: SweetVengeance
			// NewString: SweetVengeance
		}

		9: {
			// OldString: MantleoftheProtector
			// NewString: MantleoftheProtector
		}

		10: {
			// OldString: CapeoftheSurvivor
			// NewString: CapeoftheSurvivor
		}

		11: {
			// OldString: PlasmaGenerator
			// NewString: PlasmaGenerator
		}

		12: {
			// OldString: MoltenScale
			// NewString: MoltenScale
		}

		13: {
			// OldString: TerrariumDefender
			// NewString: TerrariumDefender
		}

		14: {
			// OldString: HolyAegis
			// NewString: HolyAegis
		}

		15: {
			// OldString: ChiseledBarrier
			// NewString: ChiseledBarrier
		}

		16: {
			// OldString: OlympianAegis
			// NewString: OlympianAegis
		}

		17: {
			// OldString: TerminalCluster
			// NewString: TerminalCluster
		}

		18: {
			// OldString: LifeQuartzShield
			// NewString: LifeQuartzShield
		}

		19: {
			// OldString: EnchantedMetal
			// NewString: EnchantedMetal
		}
	}

	AddRecipes: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: MoltenScale
			// NewString: MoltenScale
		}
	}
}

ShoeAccessoryChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_calamity: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_fargosSouls: {
		1: {
			// OldString: FargowiltasSouls
			// NewString: FargowiltasSouls
		}
	}

	get_calFargo: {
		1: {
			// OldString: FargowiltasCrossmod
			// NewString: FargowiltasCrossmod
		}
	}

	get_SOTSBardHealer: {
		1: {
			// OldString: SOTSBardHealer
			// NewString: SOTSBardHealer
		}
	}

	UpdateAccessory: {
		1: {
			// OldString: TerrariumParticleSprinters
			// NewString: TerrariumParticleSprinters
		}

		2: {
			// OldString: FlashsparkBoots
			// NewString: FlashsparkBoots
		}

		3: {
			// OldString: SubspaceBoosters
			// NewString: SubspaceBoosters
		}
	}

	AddTooltip: {
		1: {
			// OldString: Terraria
			// NewString: Terraria
		}

		2: {
			// OldString: Tooltip
			// NewString: Tooltip
		}

		3: {
			// OldString: StealthTooltip
			// NewString: StealthTooltip
		}
	}

	FullTooltipOveride: {
		1: {
			// OldString: Terraria
			// NewString: Terraria
		}

		2: {
			// OldString: Tooltip0
			// NewString: Tooltip0
		}

		3: {
			// OldString: ""
			// NewString: ""
		}

		4: {
			// OldString: Tooltip
			// NewString: Tooltip
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: TerrariumParticleSprinters
			// NewString: TerrariumParticleSprinters
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.TPS
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.TPS
		}

		3: {
			// OldString: SubspaceBoosters
			// NewString: SubspaceBoosters
		}

		4: {
			// OldString: FlashsparkBoots
			// NewString: FlashsparkBoots
		}

		5: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Hellfire
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.Hellfire
		}
	}
}

ShoeRecipeChanges: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	get_sots: {
		1: {
			// OldString: SOTS
			// NewString: SOTS
		}
	}

	get_fargosSouls: {
		1: {
			// OldString: FargowiltasSouls
			// NewString: FargowiltasSouls
		}
	}

	get_calFargo: {
		1: {
			// OldString: FargowiltasCrossmod
			// NewString: FargowiltasCrossmod
		}
	}

	get_Ragnarok: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}
	}

	get_CalBardHealer: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}
	}

	PostAddRecipes: {
		1: {
			// OldString: AeolusBoots
			// NewString: AeolusBoots
		}

		2: {
			// OldString: Consolaria
			// NewString: Consolaria
		}

		3: {
			// OldString: SoulofBlight
			// NewString: SoulofBlight
		}

		4: {
			// OldString: TerrariumParticleSprinters
			// NewString: TerrariumParticleSprinters
		}

		5: {
			// OldString: SubspaceBoosters
			// NewString: SubspaceBoosters
		}

		6: {
			// OldString: ssm
			// NewString: ssm
		}

		7: {
			// OldString: FlashsparkBoots
			// NewString: FlashsparkBoots
		}
	}
}

MulticlassEmpowermentRemover: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}
}

ThoriumHelpers: {
	ClearAllEmpowerments: {
		1: {
			// OldString: Empowerments
			// NewString: Empowerments
		}

		2: {
			// OldString: UpdateDeadEmpowerments
			// NewString: UpdateDeadEmpowerments
		}

		3: {
			// OldString: Update
			// NewString: Update
		}

		4: {
			// OldString: "[ThoriumCompat] Failed to clear empowerments: "
			// NewString: "[ThoriumCompat] Failed to clear empowerments: "
		}
	}
}

ThoriumMulticlassPlayerNerfs: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	IsHealerToolOrHybrid: {
		1: {
			// OldString: HealerTool
			// NewString: HealerTool
		}

		2: {
			// OldString: HealerToolDamageHybrid
			// NewString: HealerToolDamageHybrid
		}
	}
}

CustomAmmoConversionGlobal: {
	ModifyShootStats: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: MyceliumGattlingGun
			// NewString: MyceliumGattlingGun
		}

		3: {
			// OldString: ShroomBolt
			// NewString: ShroomBolt
		}

		4: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		5: {
			// OldString: FungiOrb
			// NewString: FungiOrb
		}
	}

	Shoot: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: MyceliumGattlingGun
			// NewString: MyceliumGattlingGun
		}

		3: {
			// OldString: ShroomBolt
			// NewString: ShroomBolt
		}

		4: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		5: {
			// OldString: Fungicide
			// NewString: Fungicide
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: FrostFury
			// NewString: FrostFury
		}

		3: {
			// OldString: AmmoChange
			// NewString: AmmoChange
		}

		4: {
			// OldString: Converts Wooden Arrows into Frostburn Arrows
			NewString: 将木箭转换为霜冻箭
		}

		5: {
			// OldString: StreamSting
			// NewString: StreamSting
		}

		6: {
			// OldString: Converts Wooden Arrows into Bone Arrows
			NewString: 将木箭转换为骨箭
		}

		7: {
			// OldString: CometCrossfire
			// NewString: CometCrossfire
		}

		8: {
			// OldString: Converts Wooden Arrows into Jester Arrows
			NewString: 将木箭转换为小丑之箭
		}

		9: {
			// OldString: SteelBow
			// NewString: SteelBow
		}

		10: {
			// OldString: Converts Wooden Arrows into Steel Arrows
			NewString: 将木箭转换为钢箭
		}

		11: {
			// OldString: eSandStoneBow
			// NewString: eSandStoneBow
		}

		12: {
			// OldString: Converts Wooden Arrows into Talon Arrows
			NewString: 将木箭转换为爪箭
		}

		13: {
			// OldString: DurasteelRepeater
			// NewString: DurasteelRepeater
		}

		14: {
			// OldString: Converts Wooden Arrows into Durasteel Arrows
			NewString: 将木箭转换为耐钢箭
		}

		15: {
			// OldString: Trigun
			// NewString: Trigun
		}

		16: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		17: {
			// OldString: Converts Musket balls into Hallow-point rounds
			NewString: 将火枪弹转换为神圣空尖弹
		}

		18: {
			// OldString: MyceliumGattlingGun
			// NewString: MyceliumGattlingGun
		}

		19: {
			// OldString: Fires barrages of Mycelium
			NewString: 发射一大堆真菌
		}
	}

	*cctor: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: FrostFury
			// NewString: FrostFury
		}

		3: {
			// OldString: StreamSting
			// NewString: StreamSting
		}

		4: {
			// OldString: CometCrossfire
			// NewString: CometCrossfire
		}

		5: {
			// OldString: SteelBow
			// NewString: SteelBow
		}

		6: {
			// OldString: SteelArrow
			// NewString: SteelArrow
		}

		7: {
			// OldString: eSandStoneBow
			// NewString: eSandStoneBow
		}

		8: {
			// OldString: TalonArrowPro
			// NewString: TalonArrowPro
		}

		9: {
			// OldString: DurasteelRepeater
			// NewString: DurasteelRepeater
		}

		10: {
			// OldString: DurasteelArrow
			// NewString: DurasteelArrow
		}

		11: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		12: {
			// OldString: Trigun
			// NewString: Trigun
		}

		13: {
			// OldString: HallowPointRoundProj
			// NewString: HallowPointRoundProj
		}
	}
}

NullifyCalamityProjectileGlobal: {
	SetDefaults: {
		1: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		2: {
			// OldString: AcidGunStream
			// NewString: AcidGunStream
		}

		3: {
			// OldString: WaterLeechProj
			// NewString: WaterLeechProj
		}
	}
}

InspirationChanges: {
	SetDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		3: {
			// OldString: Nocturne
			// NewString: Nocturne
		}

		4: {
			// OldString: SonarCannon
			// NewString: SonarCannon
		}

		5: {
			// OldString: CobaltGong
			// NewString: CobaltGong
		}

		6: {
			// OldString: HellBell
			// NewString: HellBell
		}

		7: {
			// OldString: WindChimes
			// NewString: WindChimes
		}

		8: {
			// OldString: AdamantiteKlaxon
			// NewString: AdamantiteKlaxon
		}

		9: {
			// OldString: HallowedMegaphone
			// NewString: HallowedMegaphone
		}

		10: {
			// OldString: CadaverCornet
			// NewString: CadaverCornet
		}

		11: {
			// OldString: Buisine
			// NewString: Buisine
		}

		12: {
			// OldString: Bassoon
			// NewString: Bassoon
		}

		13: {
			// OldString: MeteoriteOboe
			// NewString: MeteoriteOboe
		}

		14: {
			// OldString: CalamityBell
			// NewString: CalamityBell
		}

		15: {
			// OldString: ProfanedBell
			// NewString: ProfanedBell
		}

		16: {
			// OldString: RadioMic
			// NewString: RadioMic
		}
	}

	TrySetInspirationCost: {
		1: {
			// OldString: No ModItem attached
			// NewString: No ModItem attached
		}

		2: {
			// OldString: InspirationCost
			// NewString: InspirationCost
		}

		3: {
			// OldString: "[Field] Set InspirationCost of "
			// NewString: "[Field] Set InspirationCost of "
		}

		4: {
			// OldString: "' to "
			// NewString: "' to "
		}

		5: {
			// OldString: InspirationCost not found on ModItem.
			// NewString: InspirationCost not found on ModItem.
		}

		6: {
			// OldString: "Error setting InspirationCost: "
			// NewString: "Error setting InspirationCost: "
		}
	}
}

ProjectileSizeScaling: {
	SetStaticDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: MoltenThresherPro
			// NewString: MoltenThresherPro
		}

		3: {
			// OldString: BatScythePro
			// NewString: BatScythePro
		}

		4: {
			// OldString: BatScythePro2
			// NewString: BatScythePro2
		}

		5: {
			// OldString: FallingTwilightPro
			// NewString: FallingTwilightPro
		}

		6: {
			// OldString: BloodHarvestPro
			// NewString: BloodHarvestPro
		}

		7: {
			// OldString: TrueFallingTwilightPro
			// NewString: TrueFallingTwilightPro
		}

		8: {
			// OldString: TrueBloodHarvestPro
			// NewString: TrueBloodHarvestPro
		}

		9: {
			// OldString: TheBlackScythePro
			// NewString: TheBlackScythePro
		}

		10: {
			// OldString: TitanScythePro
			// NewString: TitanScythePro
		}

		11: {
			// OldString: BoneBatonPro
			// NewString: BoneBatonPro
		}

		12: {
			// OldString: TrueHallowedScythePro
			// NewString: TrueHallowedScythePro
		}

		13: {
			// OldString: PalmCrossPro
			// NewString: PalmCrossPro
		}

		14: {
			// OldString: CrimtaneScythePro
			// NewString: CrimtaneScythePro
		}

		15: {
			// OldString: IceShaverPro
			// NewString: IceShaverPro
		}

		16: {
			// OldString: DemoniteScythePro
			// NewString: DemoniteScythePro
		}

		17: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		18: {
			// OldString: WindSlashPro
			// NewString: WindSlashPro
		}

		19: {
			// OldString: MarbleScythePro
			// NewString: MarbleScythePro
		}

		20: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		21: {
			// OldString: Whirlwind
			// NewString: Whirlwind
		}
	}

	PreDraw: {
		1: {
			// OldString: ThoriumMod/Projectiles/Scythe/MoltenThresherPro_Glowmask
			// NewString: ThoriumMod/Projectiles/Scythe/MoltenThresherPro_Glowmask
		}
	}
}

NullifyRagnarokProjectileGlobal: {
	SetDefaults: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: GraspofVoidPro1
			// NewString: GraspofVoidPro1
		}

		3: {
			// OldString: GraspofVoidPro2
			// NewString: GraspofVoidPro2
		}
	}
}

WHummusGlobalItem: {
	Load: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: MarbleScythe
			// NewString: MarbleScythe
		}

		3: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		4: {
			// OldString: AquaiteScythe
			// NewString: AquaiteScythe
		}

		5: {
			// OldString: MoltenThresher
			// NewString: MoltenThresher
		}

		6: {
			// OldString: BatScythe
			// NewString: BatScythe
		}

		7: {
			// OldString: BoneReaper
			// NewString: BoneReaper
		}

		8: {
			// OldString: FallingTwilight
			// NewString: FallingTwilight
		}

		9: {
			// OldString: BloodHarvest
			// NewString: BloodHarvest
		}

		10: {
			// OldString: HallowedScythe
			// NewString: HallowedScythe
		}

		11: {
			// OldString: TrueHallowedScythe
			// NewString: TrueHallowedScythe
		}

		12: {
			// OldString: TitanScythe
			// NewString: TitanScythe
		}

		13: {
			// OldString: MorningDew
			// NewString: MorningDew
		}

		14: {
			// OldString: DreadTearer
			// NewString: DreadTearer
		}

		15: {
			// OldString: LustrousBaton
			// NewString: LustrousBaton
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ExtraInfo
			// NewString: ExtraInfo
		}

		2: {
			// OldString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SoulEssence
			// NewString: Mods.InfernalEclipseAPI.ItemTooltip.MergedCraftingTreeTooltip.SoulEssence
		}
	}
}

ItemSizeChanges: {
	SetDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		3: {
			// OldString: LifeQuartzClaymore
			// NewString: LifeQuartzClaymore
		}

		4: {
			// OldString: HereticBreaker
			// NewString: HereticBreaker
		}

		5: {
			// OldString: Spoon
			// NewString: Spoon
		}

		6: {
			// OldString: BloomingBlade
			// NewString: BloomingBlade
		}

		7: {
			// OldString: CoralSlasher
			// NewString: CoralSlasher
		}

		8: {
			// OldString: BloodDrinker
			// NewString: BloodDrinker
		}

		9: {
			// OldString: Glacier
			// NewString: Glacier
		}

		10: {
			// OldString: Executioner
			// NewString: Executioner
		}

		11: {
			// OldString: SolScorchedSlab
			// NewString: SolScorchedSlab
		}

		12: {
			// OldString: EclipseFang
			// NewString: EclipseFang
		}
	}
}

SoulEssenceGlobalItem: {
	SetStaticDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: WoodenBaton
			// NewString: WoodenBaton
		}

		3: {
			// OldString: IceShaver
			// NewString: IceShaver
		}

		4: {
			// OldString: scytheSoulCharge
			// NewString: scytheSoulCharge
		}

		5: {
			// OldString: "[SoulEssenceGlobalItem] Found Thorium scythe base type: "
			// NewString: "[SoulEssenceGlobalItem] Found Thorium scythe base type: "
		}

		6: {
			// OldString: ". Field: "
			// NewString: ". Field: "
		}

		7: {
			// OldString: "null"
			// NewString: "null"
		}

		8: {
			// OldString: ", Prop: "
			// NewString: ", Prop: "
		}

		9: {
			// OldString: "[SoulEssenceGlobalItem] Could not find a Thorium ModItem-derived type declaring 'scytheSoulCharge'. Will fallback to instance reflection."
			// NewString: "[SoulEssenceGlobalItem] Could not find a Thorium ModItem-derived type declaring 'scytheSoulCharge'. Will fallback to instance reflection."
		}

		10: {
			// OldString: "[SoulEssenceGlobalItem] Reflection search failed: "
			// NewString: "[SoulEssenceGlobalItem] Reflection search failed: "
		}
	}

	SetDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: "[SoulEssenceGlobalItem] Item "
			// NewString: "[SoulEssenceGlobalItem] Item "
		}

		3: {
			// OldString: "' is not a Thorium ModItem; skipping."
			// NewString: "' is not a Thorium ModItem; skipping."
		}

		4: {
			// OldString: "[SoulEssenceGlobalItem] Failed to set field on base type: "
			// NewString: "[SoulEssenceGlobalItem] Failed to set field on base type: "
		}

		5: {
			// OldString: "[SoulEssenceGlobalItem] Failed to set property on base type: "
			// NewString: "[SoulEssenceGlobalItem] Failed to set property on base type: "
		}

		6: {
			// OldString: scytheSoulCharge
			// NewString: scytheSoulCharge
		}

		7: {
			// OldString: "[SoulEssenceGlobalItem] Couldn't find 'scytheSoulCharge' on Thorium item instance "
			// NewString: "[SoulEssenceGlobalItem] Couldn't find 'scytheSoulCharge' on Thorium item instance "
		}

		8: {
			// OldString: "' (concrete type "
			// NewString: "' (concrete type "
		}

		9: {
			// OldString: ).
			// NewString: ).
		}
	}
}

SoulEssenceCooldownRemoval: {
	PostUpdate: {
		1: {
			// OldString: CanGiveScytheCharge
			// NewString: CanGiveScytheCharge
		}
	}

	LoadProjectileTypes: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		3: {
			// OldString: MarbleScythePro
			// NewString: MarbleScythePro
		}

		4: {
			// OldString: AquaiteScythePro
			// NewString: AquaiteScythePro
		}

		5: {
			// OldString: MoltenThresherPro
			// NewString: MoltenThresherPro
		}

		6: {
			// OldString: BatScythePro
			// NewString: BatScythePro
		}

		7: {
			// OldString: BoneReaperPro
			// NewString: BoneReaperPro
		}

		8: {
			// OldString: BloodHarvestPro
			// NewString: BloodHarvestPro
		}

		9: {
			// OldString: FallingTwilightPro
			// NewString: FallingTwilightPro
		}

		10: {
			// OldString: HallowedScythePro
			// NewString: HallowedScythePro
		}

		11: {
			// OldString: TrueHallowedScythePro
			// NewString: TrueHallowedScythePro
		}

		12: {
			// OldString: TitanScythePro
			// NewString: TitanScythePro
		}

		13: {
			// OldString: MorningDewPro
			// NewString: MorningDewPro
		}

		14: {
			// OldString: DreadTearerPro
			// NewString: DreadTearerPro
		}

		15: {
			// OldString: LustrousBatonPro
			// NewString: LustrousBatonPro
		}
	}

	SaveData: {
		1: {
			// OldString: scytheChargeCooldown
			// NewString: scytheChargeCooldown
		}
	}

	LoadData: {
		1: {
			// OldString: scytheChargeCooldown
			// NewString: scytheChargeCooldown
		}
	}
}

StealthConsumption: {
	OnSpawn: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		3: {
			// OldString: GelGlovePro
			// NewString: GelGlovePro
		}

		4: {
			// OldString: YakaArrowPro
			// NewString: YakaArrowPro
		}

		5: {
			// OldString: ConsumeStealth
			// NewString: ConsumeStealth
		}
	}

	ModifyHitNPC: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: GelGlovePro
			// NewString: GelGlovePro
		}
	}

	AI: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: GelGlovePro
			// NewString: GelGlovePro
		}
	}

	OnHitNPC: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: YakaArrowPro
			// NewString: YakaArrowPro
		}
	}
}

NullifyThoriumProjectileGlobal: {
	SetDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: CactusNeedlePro
			// NewString: CactusNeedlePro
		}

		3: {
			// OldString: BatScythePro2
			// NewString: BatScythePro2
		}
	}
}

BountifulHarvestPatch: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: RadiantStingerInfo
			// NewString: RadiantStingerInfo
		}

		2: {
			// OldString: Fires piercing stingers in an alternating pattern
			NewString: 交替射出穿透刺针
		}
	}
}

ChampionsSwiftBladeMelee: {
	SetDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: ChampionSwiftBlade
			// NewString: ChampionSwiftBlade
		}
	}
}

DamruProjectileChanges: {
	PostDraw: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: AuricDamruShock
			// NewString: AuricDamruShock
		}
	}

	Kill: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: AuricDamruFlareBomb
			// NewString: AuricDamruFlareBomb
		}

		3: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		4: {
			// OldString: BettyExplosion
			// NewString: BettyExplosion
		}
	}

	PreDraw: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: AuricDamruShock
			// NewString: AuricDamruShock
		}
	}
}

DisableRagnarokSigilNerf: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	Load: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: RagnarokMod.Utils.RagnarokModPlayer
			// NewString: RagnarokMod.Utils.RagnarokModPlayer
		}

		3: {
			// OldString: PostUpdateMiscEffects
			// NewString: PostUpdateMiscEffects
		}
	}

	PostUpdate_Hook: {
		1: {
			// OldString: accShinobiSigilFix
			// NewString: accShinobiSigilFix
		}
	}
}

NopShinobiSigilTooltipEdits: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	Load: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: RagnarokMod.Common.GlobalItems.ItemBalancer
			// NewString: RagnarokMod.Common.GlobalItems.ItemBalancer
		}

		3: {
			// OldString: ModifyTooltips
			// NewString: ModifyTooltips
		}
	}

	IsShinobiSigil: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: ShinobiSigil
			// NewString: ShinobiSigil
		}
	}
}

DisasterVelocity: {
	AI: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		2: {
			// OldString: ScorchingMaelstrom
			// NewString: ScorchingMaelstrom
		}
	}
}

EclipseFangAlwaysActive: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	UseItem: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: EclipseFang
			// NewString: EclipseFang
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: EclipseFang
			// NewString: EclipseFang
		}

		3: {
			// OldString: Weapon empowerment always active.
			NewString: 永久激活武器强化效果
		}

		4: {
			// OldString: MjolnirInfo
			// NewString: MjolnirInfo
		}
	}
}

ExecutionerMark05ThrowRework: {
	AppliesToEntity: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: ExecutionerMark05ThrowPro
			// NewString: ExecutionerMark05ThrowPro
		}

		3: {
			// OldString: WapBamBoom
			// NewString: WapBamBoom
		}
	}

	Kill: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		3: {
			// OldString: ExecutionerMark05ThrowPro
			// NewString: ExecutionerMark05ThrowPro
		}

		4: {
			// OldString: SupernovaBoom
			// NewString: SupernovaBoom
		}

		5: {
			// OldString: CalamityMod/Sounds/Item/SupernovaBoom
			// NewString: CalamityMod/Sounds/Item/SupernovaBoom
		}
	}

	OnSpawn: {
		1: {
			// OldString: RagnarokMod
			// NewString: RagnarokMod
		}

		2: {
			// OldString: WapBamBoom
			// NewString: WapBamBoom
		}
	}
}

KillTherapeuticSludgeSystem: {
	Load: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		2: {
			// OldString: TherapeuticSludge
			// NewString: TherapeuticSludge
		}
	}
}

GelatinTherapyRework: {
	AppliesToEntity: {
		1: {
			// OldString: CalamityBardHealer
			// NewString: CalamityBardHealer
		}

		2: {
			// OldString: GelatinTherapy
			// NewString: GelatinTherapy
		}
	}
}

GraniteEnergyStormFix: {
	Shoot: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}

		2: {
			// OldString: PocketEnergyStorm
			// NewString: PocketEnergyStorm
		}

		3: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}
	}
}

ElectrifiedThorsHammer: {
	ModifyTooltips: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}

		2: {
			// OldString: Inflcts electrified for 3 seconds on hits.
			NewString: 命中时施加3秒的带电
		}

		3: {
			// OldString: MjolnirInfo
			// NewString: MjolnirInfo
		}
	}
}

ThoriumMoltenThresherPatchSystem: {
	Load: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: ThoriumMod.Projectiles.Scythe.MoltenThresherPro
			// NewString: ThoriumMod.Projectiles.Scythe.MoltenThresherPro
		}

		3: {
			// OldString: PostDraw
			// NewString: PostDraw
		}
	}
}

CustomRecipeSystem: {
	PostAddRecipes: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: MyceliumGattlingGun
			// NewString: MyceliumGattlingGun
		}

		3: {
			// OldString: Funggat
			// NewString: Funggat
		}

		4: {
			// OldString: CalamityMod
			// NewString: CalamityMod
		}

		5: {
			// OldString: Fungicide
			// NewString: Fungicide
		}
	}
}

PalmCrossProScalerAndVisuals: {
	AppliesToEntity: {
		1: {
			// OldString: PalmCrossPro
			// NewString: PalmCrossPro
		}
	}

	PostAI: {
		1: {
			// OldString: PalmCrossPro
			// NewString: PalmCrossPro
		}

		2: {
			// OldString: empower
			// NewString: empower
		}
	}
}

PhoenixStaffAltFunction: {
	get_thorium: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}
	}

	AppliesToEntity: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}

	SetDefaults: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}

	CanUseItem: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}

	UseTimeMultiplier: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}

	UseAnimationMultiplier: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}

	Shoot: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}

	ModifyTooltips: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}

		2: {
			// OldString: AltFunction
			// NewString: AltFunction
		}

		3: {
			// OldString: Mods.WHummusMultiModBalancing.ItemTooltips.PhoenixStaff
			// NewString: Mods.WHummusMultiModBalancing.ItemTooltips.PhoenixStaff
		}
	}

	AllowPrefix: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}

	CanReforge: {
		1: {
			// OldString: PhoenixStaff
			// NewString: PhoenixStaff
		}
	}
}

PhoenixStaffFlameGlobal: {
	OnHitNPC: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: HolyGlare
			// NewString: HolyGlare
		}
	}
}

ThoriumHeavyScythePatch: {
	IsLoadingEnabled: {
		1: {
			// OldString: InfernalEclipseAPI
			// NewString: InfernalEclipseAPI
		}
	}

	Shoot: {
		1: {
			// OldString: ThoriumRework
			// NewString: ThoriumRework
		}

		2: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		3: {
			// OldString: ThoriumHeavyScythe
			// NewString: ThoriumHeavyScythe
		}
	}
}

Content: {
	ItemChanges: {
		ThrowableScythes: {
			ThrownScytheProjectile: {
				IsLoadingEnabled: {
					1: {
						// OldString: InfernalEclipseAPI
						// NewString: InfernalEclipseAPI
					}
				}

				AppliesToEntity: {
					1: {
						// OldString: ThoriumMod
						// NewString: ThoriumMod
					}

					2: {
						// OldString: BatScythePro
						// NewString: BatScythePro
					}

					3: {
						// OldString: IceShaverPro
						// NewString: IceShaverPro
					}

					4: {
						// OldString: DemoniteScythePro
						// NewString: DemoniteScythePro
					}

					5: {
						// OldString: CrimtaneScythePro
						// NewString: CrimtaneScythePro
					}

					6: {
						// OldString: FallingTwilightPro
						// NewString: FallingTwilightPro
					}

					7: {
						// OldString: BloodHarvestPro
						// NewString: BloodHarvestPro
					}

					8: {
						// OldString: BoneReaperPro
						// NewString: BoneReaperPro
					}

					9: {
						// OldString: LustrousBatonPro
						// NewString: LustrousBatonPro
					}

					10: {
						// OldString: MorningDewPro
						// NewString: MorningDewPro
					}

					11: {
						// OldString: ChristmasCheerPro
						// NewString: ChristmasCheerPro
					}

					12: {
						// OldString: DreadTearerPro
						// NewString: DreadTearerPro
					}

					13: {
						// OldString: TheBlackScythePro
						// NewString: TheBlackScythePro
					}

					14: {
						// OldString: RagnarokMod
						// NewString: RagnarokMod
					}

					15: {
						// OldString: ProfanedScythePro
						// NewString: ProfanedScythePro
					}

					16: {
						// OldString: ScoriaDualscythePro
						// NewString: ScoriaDualscythePro
					}

					17: {
						// OldString: CalamityBardHealer
						// NewString: CalamityBardHealer
					}

					18: {
						// OldString: HyphaeBaton
						// NewString: HyphaeBaton
					}
				}

				GetCustomWidth: {
					1: {
						// OldString: ThoriumMod
						// NewString: ThoriumMod
					}

					2: {
						// OldString: RagnarokMod
						// NewString: RagnarokMod
					}
				}

				GetCustomHeight: {
					1: {
						// OldString: ThoriumMod
						// NewString: ThoriumMod
					}

					2: {
						// OldString: RagnarokMod
						// NewString: RagnarokMod
					}
				}
			}

			ThrowableScythes: {
				IsLoadingEnabled: {
					1: {
						// OldString: InfernalEclipseAPI
						// NewString: InfernalEclipseAPI
					}
				}

				AppliesToEntity: {
					1: {
						// OldString: ThoriumMod
						// NewString: ThoriumMod
					}

					2: {
						// OldString: BatScythe
						// NewString: BatScythe
					}

					3: {
						// OldString: IceShaver
						// NewString: IceShaver
					}

					4: {
						// OldString: DarkScythe
						// NewString: DarkScythe
					}

					5: {
						// OldString: CrimsonScythe
						// NewString: CrimsonScythe
					}

					6: {
						// OldString: FallingTwilight
						// NewString: FallingTwilight
					}

					7: {
						// OldString: BloodHarvest
						// NewString: BloodHarvest
					}

					8: {
						// OldString: BoneReaper
						// NewString: BoneReaper
					}

					9: {
						// OldString: LustrousBaton
						// NewString: LustrousBaton
					}

					10: {
						// OldString: MorningDew
						// NewString: MorningDew
					}

					11: {
						// OldString: ChristmasCheer
						// NewString: ChristmasCheer
					}

					12: {
						// OldString: DreadTearer
						// NewString: DreadTearer
					}

					13: {
						// OldString: TheBlackScythe
						// NewString: TheBlackScythe
					}

					14: {
						// OldString: RagnarokMod
						// NewString: RagnarokMod
					}

					15: {
						// OldString: ProfanedScythe
						// NewString: ProfanedScythe
					}

					16: {
						// OldString: ScoriaDualscythe
						// NewString: ScoriaDualscythe
					}

					17: {
						// OldString: CalamityBardHealer
						// NewString: CalamityBardHealer
					}

					18: {
						// OldString: HyphaeBaton
						// NewString: HyphaeBaton
					}
				}

				SetCustomThrowDistance: {
					1: {
						// OldString: ThoriumMod
						// NewString: ThoriumMod
					}

					2: {
						// OldString: BatScythe
						// NewString: BatScythe
					}

					3: {
						// OldString: IceShaver
						// NewString: IceShaver
					}

					4: {
						// OldString: DarkScythe
						// NewString: DarkScythe
					}

					5: {
						// OldString: CrimsonScythe
						// NewString: CrimsonScythe
					}

					6: {
						// OldString: FallingTwilight
						// NewString: FallingTwilight
					}

					7: {
						// OldString: BloodHarvest
						// NewString: BloodHarvest
					}

					8: {
						// OldString: BoneReaper
						// NewString: BoneReaper
					}

					9: {
						// OldString: LustrousBaton
						// NewString: LustrousBaton
					}

					10: {
						// OldString: MorningDew
						// NewString: MorningDew
					}

					11: {
						// OldString: ChristmasCheer
						// NewString: ChristmasCheer
					}

					12: {
						// OldString: DreadTearer
						// NewString: DreadTearer
					}

					13: {
						// OldString: TheBlackScythe
						// NewString: TheBlackScythe
					}

					14: {
						// OldString: RagnarokMod
						// NewString: RagnarokMod
					}

					15: {
						// OldString: ProfanedScythe
						// NewString: ProfanedScythe
					}

					16: {
						// OldString: ScoriaDualscythe
						// NewString: ScoriaDualscythe
					}

					17: {
						// OldString: CalamityBardHealer
						// NewString: CalamityBardHealer
					}

					18: {
						// OldString: HyphaeBaton
						// NewString: HyphaeBaton
					}
				}

				ModifyTooltips: {
					1: {
						// OldString: ThoriumMod
						// NewString: ThoriumMod
					}

					2: {
						// OldString: BatScythe
						// NewString: BatScythe
					}

					3: {
						// OldString: IceShaver
						// NewString: IceShaver
					}

					4: {
						// OldString: DarkScythe
						// NewString: DarkScythe
					}

					5: {
						// OldString: CrimsonScythe
						// NewString: CrimsonScythe
					}

					6: {
						// OldString: FallingTwilight
						// NewString: FallingTwilight
					}

					7: {
						// OldString: BloodHarvest
						// NewString: BloodHarvest
					}

					8: {
						// OldString: BoneReaper
						// NewString: BoneReaper
					}

					9: {
						// OldString: LustrousBaton
						// NewString: LustrousBaton
					}

					10: {
						// OldString: MorningDew
						// NewString: MorningDew
					}

					11: {
						// OldString: ChristmasCheer
						// NewString: ChristmasCheer
					}

					12: {
						// OldString: DreadTearer
						// NewString: DreadTearer
					}

					13: {
						// OldString: TheBlackScythe
						// NewString: TheBlackScythe
					}

					14: {
						// OldString: RagnarokMod
						// NewString: RagnarokMod
					}

					15: {
						// OldString: ProfanedScythe
						// NewString: ProfanedScythe
					}

					16: {
						// OldString: ScoriaDualscythe
						// NewString: ScoriaDualscythe
					}

					17: {
						// OldString: CalamityBardHealer
						// NewString: CalamityBardHealer
					}

					18: {
						// OldString: HyphaeBaton
						// NewString: HyphaeBaton
					}

					19: {
						// OldString: ScytheThrow
						// NewString: ScytheThrow
					}

					20: {
						// OldString: Mods.WHummusMultiModBalancing.ItemTooltips.ScytheThrow
						// NewString: Mods.WHummusMultiModBalancing.ItemTooltips.ScytheThrow
					}
				}
			}
		}
	}
}

ShinobiNerf+AccessoryChanges: {
	SetDefaults: {
		1: {
			// OldString: ThoriumMod
			// NewString: ThoriumMod
		}

		2: {
			// OldString: ShinobiSigil
			// NewString: ShinobiSigil
		}

		3: {
			// OldString: 25% basic damage
			// NewString: 25% basic damage
		}
	}

	TrySetAccessoryDamage: {
		1: {
			// OldString: No ModItem attached
			// NewString: No ModItem attached
		}

		2: {
			// OldString: accDamage
			// NewString: accDamage
		}
	}
}

EtherealTalismanRecipeChanges+<>c: {
	<AddRecipes>b__5_0: {
		1: {
			// OldString: LegacyMisc.37
			// NewString: LegacyMisc.37
		}

		2: {
			// OldString: "' "
			// NewString: "' "
		}
	}
}

MoreOmniShields+<>c: {
	<ModifyTooltips>b__9_0: {
		1: {
			// OldString: Terraria
			// NewString: Terraria
		}

		2: {
			// OldString: ItemName
			// NewString: ItemName
		}
	}

	<ModifyTooltips>b__9_1: {
		1: {
			// OldString: Terraria
			// NewString: Terraria
		}

		2: {
			// OldString: ItemName
			// NewString: ItemName
		}
	}

	<ModifyTooltips>b__9_2: {
		1: {
			// OldString: Terraria
			// NewString: Terraria
		}

		2: {
			// OldString: ItemName
			// NewString: ItemName
		}
	}

	<ModifyTooltips>b__9_3: {
		1: {
			// OldString: Terraria
			// NewString: Terraria
		}

		2: {
			// OldString: ItemName
			// NewString: ItemName
		}
	}
}

SoulEssenceGlobalItem+<>c: {
	<SetStaticDefaults>b__5_0: {
		1: {
			// OldString: scytheSoulCharge
			// NewString: scytheSoulCharge
		}
	}
}

GraniteEnergyStormFix+<>c__DisplayClass0_0: {
	<Shoot>b__0: {
		1: {
			// OldString: ConsumeStealth
			// NewString: ConsumeStealth
		}
	}
}
